---
layout: post
title:  "用户体验方法论-善于利用限制才能创造出好的用户体验"
date:   2016-10-3 7:17:00 +0800
published:  false
categories: bbkit
---


> * [2016年10月9日笔记](#2016年10月9日笔记↓↓↓)
> * [2016年10月8日笔记](#2016年10月8日笔记↓↓↓)
> * [2016年10月7日笔记](#2016年10月7日笔记↓↓↓)
> * [2016年10月6日笔记](#2016年10月6日笔记↓↓↓)
> * [2016年10月5日笔记](#2016年10月5日笔记↓↓↓)
> * [2016年10月4日笔记](#2016年10月4日笔记↓↓↓)
> * [2016年10月3日笔记](#2016年10月3日笔记↓↓↓)


> * [Key Words](#Key Words↓↓↓)


### Chapter 02 善于利用限制才能创造出好的用户体验

* [去除中间人](#去除中间人)
* [不做与系统不匹配的设计](#不做与系统不匹配的设计)
* [新系统一锅烩](#新系统一锅烩)
* [大胆借鉴](#大胆借鉴)
* [掌握数据并清除如何使用](#掌握数据并清除如何使用)
* [增强现实感](#增强现实感)
* [本地还是网络](#本地还是网络)
* [两难选择](#两难选择)
* [网络相对于应用程序的益处](#网络相对于应用程序的益处)
* [不要墨守成规](#不要墨守成规)
* [创意爱上限制](#创意爱上限制)


<span id="2016年10月3日笔记↓↓↓">2016年10月3日笔记↓↓↓</span>

>用户体验设计师经常需要应对一个最重要的问题：我们为之设计的系统有什么限制和性能？

#### <span id="去除中间人">去除中间人</span>

>比较相关的网站或应用程序的用户体验是知识的源泉。

>这样的比较可以给人带来很多顿悟时刻，用户需求的种类是设计中必须考虑一个因素，同时还要考虑在设计中引进比较新的技术能在多大程度上大幅提升用户体验。

>通过技术获得新的情境感知能力能改变用户体验。

>任何用户体验中的花哨设计元素都不需要。

>最有竞争力的用户体验，是由那些了解如何将产品潜力最大化，以预见用户需求的公司创造。

>这些公司会创造系统来适应用户需求。

>为了做出超预期的设计，一个用户体验师应该知道系统哪些东西可以为你所用，了解为你所用的东西该如何利用。

>不要低估实现这些目标需要时间和财力保障，以及开发团队的承受能力。

<span id="2016年10月4日笔记↓↓↓">2016年10月4日笔记↓↓↓</span>

#### <span id="不做与系统不匹配的设计">不做与系统不匹配的设计</span>

>设计广为人知的网站或应用程序是比较复杂的，其中就有几个不可回避的问题。

>你要重新设计的网站或应用程序是基于现有系统制作的，因此你的设计必定受到系统条件的限制。

>这里所谓“系统”，指的是后端组成部分（如数据库、应用程序界面、软件开发工具包，告诉电脑如何与用户交流的人机交互服务，如地理定位技术），以及用户可以激活、导航和接收用户输入的前端性能。

>你需要对很多系统的性能和局限性（如iOS、各种版本的Android、各种版本的移动网页、桌面网页）有良好的理解。

>设计师要了解任何既定系统给你提供的各种选择，以便找到可以创造性地利用系统的方法，挑战极限，创造不同凡响的用户体验。

>以下流程是设计工作的核心：制作网站页面或程序页面的流程、制作线框图和设计页面。

>对你所设计的系统有充分的了解，并将这些理解同设计师的用户体验观结合起来，这时，就不仅仅能找到更有趣的满足用户需求的方法，而且能找到最有可能施行的设计方案。

>用户体验设计师所使用的系统决定着某个任务实施的所有不同方法，也决定着设计师如何能在众多的方案中为用户选择一个最优方案。

>一个例子：满足关键性条件，实现可行性目标。

- 商业需求的提出、根据之前流程绘制出流程图。

- 了解商业需求、分析商业需求、设想大致的多种可能方案。

- 在商业需求前提下，反复思考用户需求，并以所针对的系统的平台特性为参考因素。

- 确定最终方案框架，并合理优化流程和交互。

- 完善流程序列，优化交互细节。

>一个公认的可用性规则：用户在等待动作完成时，要显示系统的状态。

>**系统运行的时机**有助于设计师发现整合交互、满足产品条件的最佳位置

<span id="2016年10月5日笔记↓↓↓">2016年10月5日笔记↓↓↓</span>

#### <span id="新系统一锅烩">新系统一锅烩</span>

>制作设计方案时，任何设备都有大量的系统性能需要考虑：

>苹果收益的一些系统性能举例：

- 用于位置服务的芯片。

- 接近红外线传感器。

- 可以驱动手机中指南针的磁力计。

- 光传感器。

- 音频的输入和输出。

>只有弄清每个系统功能是什么，这些功能又是怎样内置到网站或程序当中的，才有可能将用户体验设计发挥到极致。

>弄清哪些交互时可以在用户正在使用的设备上完成的，哪些是需要访问数据库的。这有助于判断系统对某项设计的支持与否，以及信息获取速度的快慢。

>弄清楚网页编程和移动系统的面向对象（如iOS和Android）编程之间的区别。这有助于设计师在考虑如何优化既能用于桌面，又可用于移动平台设计时，思虑周全。

>了解前端语言，了解如人机交互（HCI），有助于你做出更正确的设计，也有助于设计师和开发团队做更深入的沟通。

>读懂各种人机界面指南，这些指南给开发者提供了一套很好的做视觉设计、处理交互时可以遵守的规则：

- 手势：如触屏、滑屏、拖拽、双触键。

- 导航：如Android中的回退和向上按钮。

- 通知信息。

>这些跨平台指南，有助于设计师优化桌面和移动设备的设计。

<span id="2016年10月6日笔记↓↓↓">2016年10月6日笔记↓↓↓</span>

>各种系统的人机界面指南可以作为参考，以便获取有关产品设计、局限性和必须知晓的功能。

>万维网联盟所发布的标准可以用作网络技术年鉴。

>尽量多使用应用程序和网站，可以使用如OminiGraffle等工具，记录下界面元素并深入研究。

>通过反复练习，可以掌握程序中共有的界面元素方面的知识，也可以掌握不同系统之间的差异。

>操作系统和软件更新造成程序中界面元素的差异，这种更新同时又是对可用性研究成果和其他用户体验分析的一种回应，是对技术改进的认同。

>提升对不同产品的熟识度，你将慢慢看懂界面背后的逻辑。

>充分掌握iOS和Android应用程序中的标准元素，同时也要特别重视自定义元素。

>绘制自己的线框图和原始界面是很有益处的。这样做的目的只有一个：让你的设计依托于丰富的设计实例资源库，而不是每次都从零做起。

>在拟制设计方案时，许多限制都可以成为设计师最好的朋友。

<span id="2016年10月7日笔记↓↓↓">2016年10月7日笔记↓↓↓</span>

#### <span id="大胆借鉴">大胆借鉴</span>

>虽然可以把目光聚焦在自定义的定制设计上，但可能遇到如下困难：时间不够、财力不足、系统条件限制。

>学会善用限制，为某些特殊界面打造特别的体验。但在引入新理念之前，一定要问问自己：我为什么一定要在这里大批常规？

>预估时间成本、金钱投入、可能的挫败，用心评估自定义界面给用户带来的益处与所投入成之间的关系。

>设计时，开发人员研发的难度也是考虑标准之一，重建背其他开发人员费力打磨过的空间会是个非常艰巨的任务。

>应用程序的外观和功能都有自己的个性，这虽然令人向往。不拘泥于某一个平台的设计模式，才可能被用在更多平台上。

>切记：对于那些不能用设计师的眼睛看世界的人，你和团队的努力可能不被欣赏，这样得不偿失。

>与系统所允许和提供的界面保持一致是非常重要的，花大量时间弄清楚各种用户界面元素错综复杂的特性，有助于用户体验设计能力的提升。

>对用户界面熟谙有助于设计师更好的把握某一特定任务的设计。

<span id="2016年10月8日笔记↓↓↓">2016年10月8日笔记↓↓↓</span>

#### <span id="掌握数据并清除如何使用">掌握数据并清除如何使用</span>

>深入理解设计所使用的系统的数据结构与确定要加入产品中的功能种类之间的密切关系，有助于确定哪些设计特性是合适并且合理的。

#### <span id="增强现实感">增强现实感</span>

>一旦将系统性能因素考虑到用户体验设计中去，有潜力的点子也会逐渐变得丰满。

#### <span id="本地还是网络">本地还是网络</span>

>设计应用程序所遵循的规则与网站建设的规则是不同的。

>如果用户需求为信息性的，推荐使用网络技术。有了响应式设计，网站在移动设备上浏览就有了保障。有了浏览器，网络在任何设备上都能使用。

>如果交互是程序的重要因素，例如设计游戏、社交网络或活动跟踪程序，推荐使用应用程序技术。应用程序那样可以更好地做交互处理。

#### <span id="两难的选择">两难的选择</span>

>网络技术和Native技术各有优缺点，需要仔细权衡。

>设计师要认真考虑那部分是设计的重点——是保证交互性还是获得更大的用户群。

<span id="2016年10月9日笔记↓↓↓">2016年10月9日笔记↓↓↓</span>

#### <span id="网络相对于应用程序的益处">网络相对于应用程序的益处</span>

>响应式设计的独到之处：当现实宽度不同时，它让哥哥模块外观和功能各异，这样就可以根据尺寸做优化处理。当只有几个可延展的基础模块时，要做的视觉设计不会那么繁杂，这样造成不一致的情况几率就低。这意味着不需要那么多开发时间去创新和维护。

#### <span id="不要墨守成规">不要墨守成规</span>

>为自己补偿使用的系统做设计很难。

>如果希望成为一名优秀的用户体验设计师，就要做到能读懂更多系统的语言。

#### <span id="创意爱上限制">创意爱上限制</span>

>善于利用限制才能创造出更好的用户体验：

- 将系统的限制或条件看做构建创意设计的根基。

- 寻找技术的显示边界，渐进的应用技术，引入技术不要影响用户和商业目标的实现。

- 尽可能了解系统的性能和限制，这有助于提升绘制用户理想流程图和在设计中加入新特色和交互的能力。

- 理解前端与后端系统的差异、不同操作系统的差异、阅读人机界面指南、熟悉万维网联盟标准。

- iOS和Android系统都要熟悉，而且要熟悉更多的设备。


#### <span id="Key Words↓↓↓">Key Words:</span>

>[克雷格列表(Craigslist.org)](http://craigslist.org)
