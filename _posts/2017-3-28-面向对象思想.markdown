---
layout: post
title:  "面向对象思想"
date:   2017-3-28 8:00:00 +0800
published:  true
categories: loiwu update
---


> 面向对象思想的三大支柱是 继承、封装、多态
> 合理运用代理模式设计代码，用组合代替继承
> 将模块合理拆分，形成代码可复用的组件

> 继承的三大要点
> 父类仅向子类提供服务，不涉及子类的业务逻辑
> 明显的层级关系，清晰的功能划分，让父类和子类能各司其职
> 有耦合的需求，要求父类的所有变化都能在子类中体现

> 多态的本质
> 子类通过覆盖或重载父类的方法，达到对同一类对象同一方法的调用产生不同的结果
> 应用多态的困局
> 1.父类有部分public的方法是不需要，也不允许子类覆重
> 2.父类有一些特别的方法是必须要子类去覆重的，在父类的方法其实是个空方法
> 3.父类有一些方法是可选覆重的，一旦覆重，则以子类为准
> 4.父类有一些方法即便被覆重，父类原方法还是要执行的

> 面向接口编程（Interface Oriented Programming, IOP）
> 将子类与可能被子类引入的不相关逻辑剥离开，提高了子类的可重用性，降低了迁移时可能的耦合
> 接口规范方法在子类中，哪些必须实现，哪些可选实现
> 那些不在接口定义的方法列表里的父类方法，事实上就是不建议覆重的方法

> 封装实质上是通过将相关的一堆函数和一堆对象放在一起，对外有函数作为操作通道，对内则以变量作为操作原料

> 在架构设计时，理清需求是第一步，理清调用关系是第二步，理清实现过程是第三步


> 参考：
> [继承](https://casatwy.com/tiao-chu-mian-xiang-dui-xiang-si-xiang-yi-ji-cheng.html)
> [多态](https://casatwy.com/tiao-chu-mian-xiang-dui-xiang-si-xiang-er-duo-tai.html)
> [封装](https://casatwy.com/tiao-chu-mian-xiang-dui-xiang-si-xiang-san-feng-zhuang.html)

